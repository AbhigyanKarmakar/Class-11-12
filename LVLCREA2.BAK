#include<conio.h>
#include<fstream.h>
#include<process.h>
#include<stdio.h>
int filemodifier=0;

class Matrix
{
  private:
    int ARRAY[25][80];//Main maze matrix  #Note : Console screen is 80x25
  public:
    void input(int array[25][80]);
    void output(void);
    int Matrixreturn(int,int);
    Matrix(void);
}
matrix;

void Matrix::input(int array[25][80])
{
  for (int i=0 ; i<25 ; ++i)
    for (int j=0 ; j<80 ; ++j)
      ARRAY[i][j]=array[i][j];
}

void Matrix::output(void)
{
  for (int i=0 ; i<25 ; ++i)
    for (int j=0 ; j<80 ; ++j)
    {
      if (ARRAY[i][j])
      {
	gotoxy(j+1,i+1);
	cout<<char(ARRAY[i][j]);
      }
    }
}

Matrix::Matrix(void)
{
  for (int i=0 ; i<25 ; ++i)
    for (int j=0 ; j<80 ; ++j)
      ARRAY[i][j]=0;
}

int Matrix::Matrixreturn(int i , int j)
{
  return ARRAY[i][j];
}

int confirmation(void)
{
  clrscr();
  char choice;
  gotoxy(27,11);
  cout<<"Are you sure you want to save?";
  gotoxy(27,13);
  cout<<"Choice (y/n) : ";
  cin>>choice;
  if(choice=='y'||choice=='Y')
    return 1;
  else if(choice=='n'||choice=='N')
    return 0;
  return -1; //Only happens for abnormal answers
}

void GUI(fstream &file ,int filepointer=0, int modifier_status=0)
{
  int array[25][80];
  int t=0; //Index variable
  int block[]={221,222,215,22,61,45,95,205,240,46}; //ASCII codes
  for (int i=0 ; i<25 ; ++i)
    for (int j=0 ; j<80 ; ++j)
      array[i][j]=0;     //Initialises array with zeros EXPLICITELY
  char move='\0';
  int x=1,y=1,chk=0;
  if (modifier_status)
  {
    file.seekg(filepointer);
    file.read((char*)&matrix , sizeof(matrix));
    for (int i=0 ; i<25 ; ++i)
      for (int j=0 ; j<80 ; ++j)
	array[i][j]=matrix.Matrixreturn(i,j);
  }
  while(1)
  {
    move=getch();
    switch(move)
    {
      case 'W':
      case 'w': gotoxy(x,y);     //Move Cursor UP
		cout<<' ';
		y--;
		if (y<1)
		  y=25;
		break;
      case 'S':
      case 's': gotoxy(x,y);     //Move Cursor DOWN
		cout<<' ';
		y++;
		if (y>25)
		  y=1;
		break;
      case 'A':
      case 'a': gotoxy(x,y);     //Move Cursor LEFT
		cout<<' ';
		x--;
		if (x<1)
		  x=80;
		break;
      case 'D':
      case 'd': gotoxy(x,y);     //Move Cursor RIGHT
		cout<<' ';
		x++;
		if (x>80)
		  x=1;
		break;
      case ' ': array[y-1][x-1]=block[t];//Put current block in matrix
		matrix.input(array);
		break;
      case 'R':
      case 'r': array[y-1][x-1]=0; //Eraser
		matrix.input(array);
		clrscr();
		break;
      case 'T':
      case 't': ++t;        //Change block type
		if(t>9)
		  t=0;
		break;
      case '-': chk=confirmation(); //confirmation() returns 1 for yes
		if(chk)
		{
		  file.seekp(::filemodifier);
		  file.write((char*)&matrix , sizeof(matrix));//Write to file
		  if(modifier_status)
		    goto EXIT;
		  for (int i=0 ; i<25 ; ++i)
		    for (int j=0 ; j<80 ; ++j)
		      array[i][j]=0;             //Clean Array
		  clrscr();
		  matrix.input(array);           //Clear Matrix
		  matrix.output();               //Output Blank Screen
		}
		else if(!chk)
		{
		  clrscr();
		  matrix.output();
		}
		break;
      case 'X':
      case 'x': goto EXIT;
    }
    matrix.output();//Display Array
    gotoxy(x,y);  //Display currently selected block
    cout<<char(block[t]);
    gotoxy(x,y);  //Small beautification detail
  }
  EXIT:
}
void level_add(char name[15],int filepointer=0,int filemodifierstatus=0)
{
  fstream file;  //For database functions
  file.open(name,ios::out|ios::binary|ios::ate|ios::in);
  file.seekp(filepointer);
  GUI(file,filepointer,filemodifierstatus);
  clrscr();
}
void level_view(char name[15])
{
  clrscr();
  fstream file;
  char ch='\0';
  file.open(name,ios::in|ios::binary);
  while(1)
  {
    ::filemodifier=file.tellg();
    file.read((char*)&matrix , sizeof(matrix));
    if (file.eof())
      break;
    clrscr();
    matrix.output();
    ch=getch();
    if (ch=='m'||ch=='M')
      goto EXIT;
  }
  EXIT:
}
void level_modify(char name[15])
{
  clrscr();
  fstream file;
  file.open(name,ios::in|ios::out|ios::binary);
  level_view(name);
  clrscr();
  file.seekg(::filemodifier);
  file.read((char*)&matrix , sizeof(matrix));
  matrix.output();
  level_add(name,::filemodifier,1);
}
void main()
{
  clrscr();
  char name[15];
  cout<<"Enter Database Name : ";
  cin.getline(name,14);
  cout<<"\n1.Add Levels"
      <<"\n2.View Levels"
      <<"\n3.Modify Levels"
      <<"\n4.Exit"
      <<"\nChoice : ";
  int choice=0;
  cin>>choice;
  if (choice==1)
    level_add(name);
  else if(choice==2)
    level_view(name);
  else if(choice==3)
    level_modify(name);
}

