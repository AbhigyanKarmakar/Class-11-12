#include<conio.h>
#include<fstream.h>
#include<process.h>
#include<stdio.h>
class Matrix
{
  private:
    int ARRAY[25][80];//Main maze matrix  #Note : Console screen is 80x25
  public:
    void input(int array[25][80]);
    void output(void);
    Matrix(void);

}
matrix;
void Matrix::input(int array[25][80])
{
  for (int i=0 ; i<25 ; ++i)
    for (int j=0 ; j<80 ; ++j)
      ARRAY[i][j]=array[i][j];
}
void Matrix::output(void)
{
  for (int i=0 ; i<25 ; ++i)
    for (int j=0 ; j<80 ; ++j)
    {
      if (ARRAY[i][j])
      {
	gotoxy(j+1,i+1);
	cout<<char(ARRAY[i][j]);
      }
    }
}
Matrix::Matrix(void)
{
  for (int i=0 ; i<25 ; ++i)
    for (int j=0 ; j<80 ; ++j)
      ARRAY[i][j]=0;
}
int confirmation(void)
{
  clrscr();
  char choice;
  gotoxy(27,11);
  cout<<"Are you sure you want to save?";
  gotoxy(27,13);
  cout<<"Choice (y/n) : ";
  cin>>choice;
  if(choice=='y'||choice=='Y')
    return 1;
  else if(choice=='n'||choice=='N')
    return 0;
  return -1; //Only happens for abnormal answers
}
void level_add(char name[15],int filepointer=0)
{
  ofstream file;  //For database functions
  file.open(name,ios::out|ios::binary|ios::app);
  file.seekp(filepointer);
  int array[25][80];
  int t=0; //Index variable
  int block[]={221,222,215,22,61,45,95,205,240,46}; //ASCII codes
  for (int i=0 ; i<25 ; ++i)
    for (int j=0 ; j<80 ; ++j)
      array[i][j]=0;     //Initialises array with zeros EXPLICITELY
  clrscr();
  char move='\0';
  int x=1,y=1,chk=0;
  while(1)
  {
    move=getch();
    switch(move)
    {
      case 'W':
      case 'w': gotoxy(x,y);     //Move Cursor UP
		cout<<' ';
		y--;
		if (y<1)
		  y=25;
		break;
      case 'S':
      case 's': gotoxy(x,y);     //Move Cursor DOWN
		cout<<' ';
		y++;
		if (y>25)
		  y=1;
		break;
      case 'A':
      case 'a': gotoxy(x,y);     //Move Cursor LEFT
		cout<<' ';
		x--;
		if (x<1)
		  x=80;
		break;
      case 'D':
      case 'd': gotoxy(x,y);     //Move Cursor RIGHT
		cout<<' ';
		x++;
		if (x>80)
		  x=1;
		break;
      case ' ': array[y-1][x-1]=block[t];//Put current block in matrix
		matrix.input(array);
		break;
      case 'R':
      case 'r': array[y-1][x-1]=0; //Eraser
		matrix.input(array);
		clrscr();
		break;
      case 'T':
      case 't': ++t;        //Change block type
		if(t>9)
		  t=0;
		break;
      case '-': file.seekp(0);
		chk=confirmation();
		if(chk)
		{
		  file.write((char*)&matrix , sizeof(matrix));
		  for (int i=0 ; i<25 ; ++i)
		    for (int j=0 ; j<80 ; ++j)
		      array[i][j]=0;
		  clrscr();
		  matrix.input(array);
		  matrix.output();
		}
		else if(!chk)
		{
		  clrscr();
		  matrix.output();
		}
		break;
      case 'X':
      case 'x': goto EXIT;
    }
    matrix.output();//Display Array
    gotoxy(x,y);  //Display currently selected block
    cout<<char(block[t]);
    gotoxy(x,y);  //Small beautification detail
  }
  EXIT:
}
void level_view(char name[15])
{
  clrscr();
  ifstream file;
  Matrix matrix;
  file.open(name,ios::in|ios::binary);
  file.seekg(0);
  while(1)
  {
    file.read((char*)&matrix , sizeof(matrix));
    if (file.eof())
      break;
    clrscr();
    matrix.output();
    getch();
  }
}
void level_modify(char name[15])
{
  clrscr();
  char choice='\0';
  int filepointer=0;
  fstream file;
  Matrix matrix;
  file.open(name,ios::in|ios::binary);
  file.seekg(0);
  while(1)
  {
    filepointer=file.tellg();
    file.read((char*)&matrix , sizeof(matrix));
    if (file.eof())
      break;
    clrscr();
    matrix.output();
    choice=getch();
    if (choice=='m'||choice=='M')
    {
      int array[25][80];
      int t=0; //Index variable
      int block[]={221,222,215,22,61,45,95,205,240,46}; //ASCII codes
      for (int i=0 ; i<25 ; ++i)
	for (int j=0 ; j<80 ; ++j)
	  array[i][j]=0;     //Initialises array with zeros EXPLICITELY
      clrscr();
      char move='\0';
      int x=1,y=1,chk=0;
      while(1)
      {
	move=getch();
	switch(move)
	{
	  case 'W':
	  case 'w': gotoxy(x,y);     //Move Cursor UP
		    cout<<' ';
		    y--;
		    if (y<1)
		      y=25;
		    break;
	  case 'S':
	  case 's': gotoxy(x,y);     //Move Cursor DOWN
		    cout<<' ';
		    y++;
		    if (y>25)
		      y=1;
		    break;
	  case 'A':
	  case 'a': gotoxy(x,y);     //Move Cursor LEFT
		    cout<<' ';
		    x--;
		    if (x<1)
		      x=80;
		    break;
	  case 'D':
	  case 'd': gotoxy(x,y);     //Move Cursor RIGHT
		    cout<<' ';
		    x++;
		    if (x>80)
		      x=1;
		    break;
	  case ' ': array[y-1][x-1]=block[t];//Put current block in matrix
		    matrix.input(array);
		    break;
	  case 'R':
	  case 'r': array[y-1][x-1]=0; //Eraser
		    matrix.input(array);
		    clrscr();
		    break;
	  case 'T':
	  case 't': ++t;        //Change block type
		    if(t>9)
		      t=0;
		    break;
	  case '-': file.seekp(filepointer);
		    chk=confirmation();
		    if(chk)
		    {
		      file.write((char*)&matrix , sizeof(matrix));
		      for (int i=0 ; i<25 ; ++i)
			for (int j=0 ; j<80 ; ++j)
			  array[i][j]=0;
		      clrscr();
		      matrix.input(array);
		      matrix.output();
		    }
		    else if(!chk)
		    {
		      clrscr();
		      matrix.output();
		    }
		    break;
	  case 'X':
	  case 'x': goto EXIT;
	}
	matrix.output();//Display Array
	gotoxy(x,y);  //Display currently selected block
	cout<<char(block[t]);
	gotoxy(x,y);  //Small beautification detail
      }
      EXIT:
    }
  }
}
void main()
{
  clrscr();
  char name[15];
  cout<<"Enter Database Name : ";
  cin.getline(name,14);
  cout<<"\n1.Add Levels"
      <<"\n2.View Levels"
      <<"\n3.Modify Levels"
      <<"\n3.Exit"
      <<"\nChoice : ";
  int choice=0;
  cin>>choice;
  if (choice==1)
    level_add(name);
  else if(choice==2)
    level_view(name);
  else if(choice==3)
    level_modify(name);
}

